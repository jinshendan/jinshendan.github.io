<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SWERC and Cachan</title>
  <subtitle>ACM-ICPC, SWERC</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jinshendan.github.io/"/>
  <updated>2016-10-28T13:47:54.000Z</updated>
  <id>http://jinshendan.github.io/</id>
  
  <author>
    <name>Shendan JIN</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Text Document Analysis - CodeForce - 723B</title>
    <link href="http://jinshendan.github.io/Text-Document-Analysis-CF-723B.html"/>
    <id>http://jinshendan.github.io/Text-Document-Analysis-CF-723B.html</id>
    <published>2016-10-28T13:45:03.000Z</published>
    <updated>2016-10-28T13:47:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="http://codeforces.com/problemset/problem/723/B" target="_blank" rel="external">Here</a>.</p>
<h3 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h3><a id="more"></a>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">	<span class="keyword">int</span> p = <span class="number">0</span>;</div><div class="line">	<span class="keyword">char</span> s;</div><div class="line">	<span class="keyword">int</span> num_words_in = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> max_length_out = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> length = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; s;</div><div class="line">		<span class="keyword">if</span> (s == <span class="string">'_'</span> || s == <span class="string">'('</span> || s == <span class="string">')'</span>) &#123;</div><div class="line">			<span class="keyword">if</span> (p &amp;&amp; length) &#123;  num_words_in ++; &#125;</div><div class="line">			<span class="keyword">else</span> max_length_out = max(max_length_out, length);</div><div class="line">			length = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (s == <span class="string">'('</span>) </div><div class="line">			p = <span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span> (s == <span class="string">')'</span>)</div><div class="line">			p = <span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span> ((<span class="string">'a'</span> &lt;= s &amp;&amp; s &lt;= <span class="string">'z'</span>) || (<span class="string">'A'</span> &lt;= s &amp;&amp; s &lt;= <span class="string">'Z'</span>))</div><div class="line">			length ++;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//cout &lt;&lt; max_length_out &lt;&lt; endl;</span></div><div class="line">	max_length_out = max(max_length_out, length);</div><div class="line"></div><div class="line">	<span class="built_in">cout</span> &lt;&lt; max_length_out &lt;&lt; <span class="string">" "</span> &lt;&lt; num_words_in &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/723/B&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Code-in-C&quot;&gt;&lt;a href=&quot;#Code-in-C&quot; class=&quot;headerlink&quot; title=&quot;Code in C++&quot;&gt;&lt;/a&gt;Code in C++&lt;/h3&gt;
    
    </summary>
    
      <category term="CodeForce" scheme="http://jinshendan.github.io/categories/CodeForce/"/>
    
    
      <category term="Expression parsing" scheme="http://jinshendan.github.io/tags/Expression-parsing/"/>
    
      <category term="Implementation" scheme="http://jinshendan.github.io/tags/Implementation/"/>
    
  </entry>
  
  <entry>
    <title>The New Year Meeting Friends - Codeforce 723A</title>
    <link href="http://jinshendan.github.io/The-New-Year-Meeting-Friends-CF-723A.html"/>
    <id>http://jinshendan.github.io/The-New-Year-Meeting-Friends-CF-723A.html</id>
    <published>2016-10-28T13:35:27.000Z</published>
    <updated>2016-10-28T13:39:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="http://codeforces.com/problemset/problem/723/A" target="_blank" rel="external">Here</a>.</p>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><a id="more"></a>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> a, b, c;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; max(max(a, b), c) - min(min(a, b), c) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/723/A&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Code-in-C&quot;&gt;&lt;a href=&quot;#Code-in-C&quot; class=&quot;headerlink&quot; title=&quot;Code in C++&quot;&gt;&lt;/a&gt;Code in C++&lt;/h2&gt;
    
    </summary>
    
      <category term="CodeForce" scheme="http://jinshendan.github.io/categories/CodeForce/"/>
    
    
      <category term="Sort" scheme="http://jinshendan.github.io/tags/Sort/"/>
    
  </entry>
  
  <entry>
    <title>Transformation from A to B - Codeforce 727A</title>
    <link href="http://jinshendan.github.io/Transformation-from-A-to-B-CF-727A.html"/>
    <id>http://jinshendan.github.io/Transformation-from-A-to-B-CF-727A.html</id>
    <published>2016-10-28T13:25:41.000Z</published>
    <updated>2016-10-28T13:42:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="http://codeforces.com/problemset/problem/727/A" target="_blank" rel="external">Here</a>.</p>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><a id="more"></a>
<pre><code class="C++"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span>
<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;

<span class="keyword">int</span> a, b;
<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{
    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;
    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;
    <span class="keyword">int</span> ok = <span class="number">1</span>;
    <span class="keyword">while</span> (b &gt; a) {
        <span class="comment">//cout &lt;&lt; b &lt;&lt; endl;</span>
        v.push_back(b);
        <span class="keyword">if</span> ((b &amp; <span class="number">1</span>) == <span class="number">0</span>) {
            b = b / <span class="number">2</span>;
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (b % <span class="number">10</span> == <span class="number">1</span>) {
            b = b / <span class="number">10</span>;
        }
        <span class="keyword">else</span> { ok = <span class="number">0</span>; <span class="keyword">break</span>;}
    }

    <span class="keyword">if</span> (b != a) ok = <span class="number">0</span>; 
    <span class="keyword">else</span> v.push_back(a);


    <span class="keyword">if</span> (!ok) <span class="built_in">cout</span> &lt;&lt; <span class="string">"NO"</span> &lt;&lt; <span class="built_in">endl</span>;
    <span class="keyword">else</span> {
        <span class="built_in">cout</span> &lt;&lt; <span class="string">"YES"</span> &lt;&lt; <span class="built_in">endl</span>;
        <span class="built_in">cout</span> &lt;&lt; v.size() &lt;&lt; <span class="built_in">endl</span>;
        <span class="keyword">for</span> (<span class="keyword">int</span> i = v.size()<span class="number">-1</span>; i &gt;<span class="number">0</span>; i--)
            <span class="built_in">cout</span> &lt;&lt; v[i] &lt;&lt; <span class="string">" "</span>;
        <span class="built_in">cout</span> &lt;&lt; v[<span class="number">0</span>] &lt;&lt; <span class="built_in">endl</span>;
    }
    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/727/A&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Code-in-C&quot;&gt;&lt;a href=&quot;#Code-in-C&quot; class=&quot;headerlink&quot; title=&quot;Code in C++&quot;&gt;&lt;/a&gt;Code in C++&lt;/h2&gt;
    
    </summary>
    
      <category term="CodeForce" scheme="http://jinshendan.github.io/categories/CodeForce/"/>
    
    
      <category term="dfs" scheme="http://jinshendan.github.io/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>Bill Total Value - Codeforce 727B</title>
    <link href="http://jinshendan.github.io/Bill-Total-Value-CF-727B.html"/>
    <id>http://jinshendan.github.io/Bill-Total-Value-CF-727B.html</id>
    <published>2016-10-28T13:18:47.000Z</published>
    <updated>2016-10-28T13:21:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="http://codeforces.com/problemset/problem/727/B" target="_blank" rel="external">Here</a>.</p>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><a id="more"></a>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> epsilon = <span class="number">0.00001</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> n = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (x &gt; <span class="number">0</span>) &#123;</div><div class="line">		n ++;</div><div class="line">		x = x / <span class="number">10</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> n;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; w;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">if</span> (v.size() == <span class="number">1</span>)</div><div class="line">		<span class="keyword">return</span> v[<span class="number">0</span>];</div><div class="line">	<span class="keyword">double</span> tmp = <span class="number">0.0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; v.size()<span class="number">-1</span>; i++)</div><div class="line">		tmp = tmp*<span class="number">1000</span> + v[i];</div><div class="line">	<span class="comment">//cout &lt;&lt; tmp &lt;&lt; endl;</span></div><div class="line">	<span class="comment">//cout &lt;&lt; v[v.size()-1] &lt;&lt; endl;</span></div><div class="line">	<span class="comment">//cout &lt;&lt; f(32) &lt;&lt; endl;</span></div><div class="line">	<span class="comment">//cout &lt;&lt; w[v.size()-1] &lt;&lt; endl;</span></div><div class="line">	<span class="keyword">if</span> (w[v.size()<span class="number">-1</span>] &lt;= <span class="number">2</span>) &#123;</div><div class="line">		<span class="comment">//cout &lt;&lt; "----&gt; " &lt;&lt; v[v.size()-1] &lt;&lt; endl;</span></div><div class="line">		tmp += <span class="number">0.01</span> * v[v.size()<span class="number">-1</span>];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> tmp = tmp * <span class="number">1000</span> + v[v.size()<span class="number">-1</span>];</div><div class="line"></div><div class="line">	<span class="comment">//cout &lt;&lt; "return " &lt;&lt; tmp &lt;&lt; endl;</span></div><div class="line">	<span class="keyword">return</span> tmp;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">(<span class="keyword">double</span> sum)</span> </span>&#123;</div><div class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</div><div class="line">	<span class="keyword">int</span> zhengshu = (<span class="keyword">int</span>)sum;</div><div class="line">	<span class="comment">//cout &lt;&lt; (sum-zhengshu)*100 + epsilon &lt;&lt; endl;</span></div><div class="line">	<span class="keyword">int</span> xiaoshu = ((sum - zhengshu)*<span class="number">100</span>) + epsilon;</div><div class="line">	<span class="comment">//cout &lt;&lt; "xs : " &lt;&lt; xiaoshu &lt;&lt; endl;</span></div><div class="line">	<span class="comment">//cout &lt;&lt; zhengshu &lt;&lt; endl;</span></div><div class="line">	<span class="keyword">if</span> (zhengshu == <span class="number">0</span>)</div><div class="line">		v.push_back(<span class="number">0</span>);</div><div class="line">	<span class="keyword">while</span> (zhengshu &gt; <span class="number">0</span>)&#123;</div><div class="line">		v.push_back(zhengshu % <span class="number">1000</span>);</div><div class="line">		zhengshu = zhengshu / <span class="number">1000</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="built_in">cout</span> &lt;&lt; v[v.size()<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = v.size()<span class="number">-2</span>; i &gt;=<span class="number">0</span>; i--)&#123;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"."</span>;</div><div class="line">		<span class="keyword">if</span> (f(v[i]) == <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"00"</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (f(v[i]) == <span class="number">2</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span>;</div><div class="line"></div><div class="line">		<span class="built_in">cout</span> &lt;&lt; v[i];</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (xiaoshu == <span class="number">0</span>)</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">else</span> &#123;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">'.'</span>; </div><div class="line">		<span class="keyword">if</span> (f(xiaoshu) == <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">'0'</span>;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; xiaoshu &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="built_in">string</span> s;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; s;</div><div class="line">	<span class="keyword">int</span> len = s.length();</div><div class="line">	<span class="keyword">int</span> num = <span class="number">0</span>;</div><div class="line">	<span class="keyword">double</span> sum = <span class="number">0.00</span>;</div><div class="line">	<span class="keyword">int</span> len_num = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (<span class="string">'0'</span> &lt;= s[i] &amp;&amp; s[i] &lt;= <span class="string">'9'</span>) &#123;</div><div class="line">			num = num * <span class="number">10</span> + (s[i]-<span class="string">'0'</span>);</div><div class="line">			len_num++;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (s[i] == <span class="string">'.'</span>) &#123;</div><div class="line">			v.push_back(num);</div><div class="line">			w.push_back(len_num);</div><div class="line">			num = <span class="number">0</span>;  len_num = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (<span class="string">'a'</span> &lt;= s[i] &amp;&amp; s[i] &lt;= <span class="string">'z'</span>) &#123;</div><div class="line">			v.push_back(num);</div><div class="line">			w.push_back(len_num);</div><div class="line">			sum += solve();</div><div class="line">			num = <span class="number">0</span>; len_num = <span class="number">0</span>;</div><div class="line">			v.clear(); w.clear();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	v.push_back(num);</div><div class="line">	w.push_back(len_num);</div><div class="line">	sum += solve();</div><div class="line">	out(sum);</div><div class="line">	<span class="comment">//printf("%.2f\n", sum);</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/727/B&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Code-in-C&quot;&gt;&lt;a href=&quot;#Code-in-C&quot; class=&quot;headerlink&quot; title=&quot;Code in C++&quot;&gt;&lt;/a&gt;Code in C++&lt;/h2&gt;
    
    </summary>
    
      <category term="CodeForce" scheme="http://jinshendan.github.io/categories/CodeForce/"/>
    
    
      <category term="Implementation" scheme="http://jinshendan.github.io/tags/Implementation/"/>
    
      <category term="String" scheme="http://jinshendan.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Cormen The Best Friend Of a Man - Codeforce 732B</title>
    <link href="http://jinshendan.github.io/Cormen-CF-732B.html"/>
    <id>http://jinshendan.github.io/Cormen-CF-732B.html</id>
    <published>2016-10-28T13:06:21.000Z</published>
    <updated>2016-10-28T13:23:31.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="http://codeforces.com/problemset/problem/732/B" target="_blank" rel="external">Here</a>.</p>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><a id="more"></a>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">505</span>;</div><div class="line"><span class="keyword">int</span> a[maxn];</div><div class="line"><span class="keyword">int</span> tot;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n, m;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++) </div><div class="line">		<span class="built_in">cin</span> &gt;&gt; a[i];</div><div class="line"></div><div class="line">	tot = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">		<span class="keyword">if</span> (a[i<span class="number">-1</span>] + a[i] &lt; m) &#123;</div><div class="line">			tot += m - a[i] - a[i<span class="number">-1</span>];</div><div class="line">			a[i] = m - a[i<span class="number">-1</span>];</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; tot &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; a[n<span class="number">-1</span>] &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/732/B&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Code-in-C&quot;&gt;&lt;a href=&quot;#Code-in-C&quot; class=&quot;headerlink&quot; title=&quot;Code in C++&quot;&gt;&lt;/a&gt;Code in C++&lt;/h2&gt;
    
    </summary>
    
      <category term="CodeForce" scheme="http://jinshendan.github.io/categories/CodeForce/"/>
    
    
      <category term="Greedy" scheme="http://jinshendan.github.io/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>Sockets - Codeforce 732E</title>
    <link href="http://jinshendan.github.io/CF-732E-Sockets.html"/>
    <id>http://jinshendan.github.io/CF-732E-Sockets.html</id>
    <published>2016-10-28T12:57:40.000Z</published>
    <updated>2016-10-28T13:21:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="http://codeforces.com/problemset/problem/732/E" target="_blank" rel="external">Here</a>.</p>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><a id="more"></a>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200000</span> + <span class="number">5</span>;</div><div class="line"><span class="keyword">struct</span> Node &#123;</div><div class="line">	<span class="keyword">int</span> v, id, num;</div><div class="line">	Node(<span class="keyword">int</span> v, <span class="keyword">int</span> id, <span class="keyword">int</span> num): v(v), id(id), num(num) &#123;&#125;</div><div class="line"></div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> Node &amp;t) <span class="keyword">const</span> &#123;</div><div class="line">		<span class="keyword">return</span> (v &lt; t.v) || (v == t.v &amp;&amp; num &gt; t.num);</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, m;</div><div class="line"><span class="keyword">int</span> ans[maxn], ans2[maxn];</div><div class="line"><span class="keyword">int</span> total_socket, total_computer;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	priority_queue&lt;Node&gt; que;</div><div class="line">	<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; mp;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;m);</div><div class="line">	<span class="keyword">int</span> x;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i++) &#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</div><div class="line">		mp[x].push_back(i);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</div><div class="line">		que.push(Node(x, i, <span class="number">0</span>));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//memset(ans2, 0, sizeof(ans2));</span></div><div class="line"></div><div class="line">	total_socket = total_computer = <span class="number">0</span>;</div><div class="line">	<span class="comment">//int max_now;</span></div><div class="line">	<span class="keyword">while</span>(!que.empty())&#123;</div><div class="line">		Node tmp = que.top(); que.pop();</div><div class="line">		<span class="keyword">if</span> (mp.find(tmp.v) != mp.end() &amp;&amp; mp[tmp.v].size()) &#123;</div><div class="line">			ans[tmp.id] = tmp.num;</div><div class="line">			ans2[mp[tmp.v][mp[tmp.v].size()<span class="number">-1</span>]] = tmp.id;</div><div class="line">			total_socket += tmp.num;</div><div class="line">			total_computer ++;</div><div class="line">			mp[tmp.v].pop_back();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">if</span> (tmp.v &gt; <span class="number">1</span>) &#123;</div><div class="line">				que.push(Node(tmp.v - tmp.v/<span class="number">2</span>, tmp.id, tmp.num+<span class="number">1</span>));</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, total_computer, total_socket);</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, ans[i]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[m]);</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>, ans2[i]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans2[n]);</div><div class="line"> 	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/732/E&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Code-in-C&quot;&gt;&lt;a href=&quot;#Code-in-C&quot; class=&quot;headerlink&quot; title=&quot;Code in C++&quot;&gt;&lt;/a&gt;Code in C++&lt;/h2&gt;
    
    </summary>
    
      <category term="CodeForce" scheme="http://jinshendan.github.io/categories/CodeForce/"/>
    
    
      <category term="Greedy" scheme="http://jinshendan.github.io/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>Two Sum - Leetcode A1</title>
    <link href="http://jinshendan.github.io/Two-Sum.html"/>
    <id>http://jinshendan.github.io/Two-Sum.html</id>
    <published>2016-09-19T08:59:47.000Z</published>
    <updated>2016-09-19T09:23:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="https://leetcode.com/problems/two-sum/" target="_blank" rel="external">Here</a>.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.</p>
<p>You may assume that each input would have exactly one solution.</p>
<p>The return format had been changed to zero-based indices.<br><a id="more"></a></p>
<h2 id="Analyse"><a href="#Analyse" class="headerlink" title="Analyse"></a>Analyse</h2><h3 id="Be-careful"><a href="#Be-careful" class="headerlink" title="Be careful"></a>Be careful</h3><ul>
<li>zero-based indices.</li>
<li>[1, 3, 4, 2].  4 + 2 = 6 is ok. But not for 3 + 3 = 6.</li>
<li>[1, 3, 3, 2].  3 + 3 = 6 is ok.  </li>
</ul>
<h3 id="Brute-force"><a href="#Brute-force" class="headerlink" title="Brute force"></a>Brute force</h3><p>Loop through each element x and find if there is another value equals to target - x.</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</div><div class="line"> 		<span class="keyword">int</span> length = nums.size();</div><div class="line"> 		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) </div><div class="line"> 			<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; length; j++) &#123;</div><div class="line"> 				<span class="keyword">if</span> (nums[i] + nums[j] == target) &#123;</div><div class="line"> 					ans.push_back(i);</div><div class="line"> 					ans.push_back(j);</div><div class="line"> 					<span class="keyword">return</span> ans;</div><div class="line"> 				&#125;</div><div class="line"> 			&#125;</div><div class="line"> 		<span class="keyword">return</span> ans;</div><div class="line">	&#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Complexity: O(n^2).</p>
<h3 id="Binary-Search"><a href="#Binary-Search" class="headerlink" title="Binary Search"></a>Binary Search</h3><p>One way to improve the brute force is sort the whole array and loop through each element x and find if there is another value equals to target - x by binary search.</p>
<p>Complexity: O(nlogn).</p>
<h3 id="Hash-Map"><a href="#Hash-Map" class="headerlink" title="Hash Map"></a>Hash Map</h3><p>While we iterate and inserting elements into the hash table, we also look back to check if current element’s complement already exists in the table. If it exists, we have found a solution and return immediately.</p>
<p>16 / 16 test cases passed.<br>Status: Accepted<br>Runtime: 26 ms</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Solution &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</div><div class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</div><div class="line">        <span class="keyword">int</span> length = nums.size();</div><div class="line">        <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;mp;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">        	<span class="keyword">if</span> (mp[target - nums[i]]) &#123;</div><div class="line">        		ans.push_back(mp[target - nums[i]] - <span class="number">1</span>);</div><div class="line">        		ans.push_back(i);</div><div class="line">        		<span class="keyword">return</span> ans;</div><div class="line">        	&#125;</div><div class="line">        	mp[nums[i]] = i + <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line"> 	   <span class="keyword">return</span> ans;</div><div class="line">	&#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Complexity: O(n).</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/two-sum/&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;/p&gt;
&lt;p&gt;You may assume that each input would have exactly one solution.&lt;/p&gt;
&lt;p&gt;The return format had been changed to zero-based indices.&lt;br&gt;
    
    </summary>
    
      <category term="Leetcode" scheme="http://jinshendan.github.io/categories/Leetcode/"/>
    
    
      <category term="Hash Table" scheme="http://jinshendan.github.io/tags/Hash-Table/"/>
    
      <category term="Binary Search" scheme="http://jinshendan.github.io/tags/Binary-Search/"/>
    
  </entry>
  
  <entry>
    <title>Calculator Conundrum - UVA 11549</title>
    <link href="http://jinshendan.github.io/calculator-conundrum.html"/>
    <id>http://jinshendan.github.io/calculator-conundrum.html</id>
    <published>2016-09-17T22:00:00.000Z</published>
    <updated>2016-09-18T19:39:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=2544" target="_blank" rel="external">Here</a>.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li>Given n(1 &lt;= n &lt;= 9) and k (0 &lt;= k &lt; 10^n) where n is the number of digits the calculator can display, k is the starting number. Compute the maximum number that we can get by repeatedly squaring the starting number.</li>
</ul>
<h2 id="Analyse"><a href="#Analyse" class="headerlink" title="Analyse"></a>Analyse</h2><ul>
<li>Floyd Cycle Detection Algorithm !</li>
</ul>
<a id="more"></a>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> buffer[<span class="number">100</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">floyd</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> p)</span> </span>&#123;	</div><div class="line">	<span class="keyword">if</span> (!p) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">long</span> <span class="keyword">long</span> q = (<span class="keyword">long</span> <span class="keyword">long</span>) p * p;</div><div class="line">	<span class="keyword">int</span> tmp = <span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span> (q &gt; <span class="number">0</span>) &#123;</div><div class="line">		buffer[tmp++] = q % <span class="number">10</span>;</div><div class="line">		q /= <span class="number">10</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (n &gt; tmp) n = tmp;</div><div class="line">	<span class="keyword">int</span> ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">		ans = ans * <span class="number">10</span> + buffer[--tmp];</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//floyd  </span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> T;</div><div class="line">	<span class="keyword">int</span> n, k;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; T;</div><div class="line">	<span class="keyword">while</span> (T--) &#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</div><div class="line">		<span class="keyword">int</span> ans = k;</div><div class="line">		<span class="keyword">int</span> p1 = k, p2 = k;</div><div class="line">		<span class="keyword">do</span> &#123;</div><div class="line">			p1 = floyd(n, p1);</div><div class="line">			p2 = floyd(n, p2); <span class="keyword">if</span> (p2 &gt; ans) ans = p2;</div><div class="line">			p2 = floyd(n, p2); <span class="keyword">if</span> (p2 &gt; ans) ans = p2;</div><div class="line">		&#125; <span class="keyword">while</span> (p1 != p2);</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=2544&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Given n(1 &amp;lt;= n &amp;lt;= 9) and k (0 &amp;lt;= k &amp;lt; 10^n) where n is the number of digits the calculator can display, k is the starting number. Compute the maximum number that we can get by repeatedly squaring the starting number.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Analyse&quot;&gt;&lt;a href=&quot;#Analyse&quot; class=&quot;headerlink&quot; title=&quot;Analyse&quot;&gt;&lt;/a&gt;Analyse&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Floyd Cycle Detection Algorithm !&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="UVA" scheme="http://jinshendan.github.io/categories/UVA/"/>
    
    
      <category term="Floyd cycle detection" scheme="http://jinshendan.github.io/tags/Floyd-cycle-detection/"/>
    
  </entry>
  
  <entry>
    <title>Open Credit System - UVA 11078</title>
    <link href="http://jinshendan.github.io/open-credit-system.html"/>
    <id>http://jinshendan.github.io/open-credit-system.html</id>
    <published>2016-09-15T22:00:00.000Z</published>
    <updated>2016-09-17T12:10:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=2019" target="_blank" rel="external">Here</a>.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li>Given a list A, find the max(a[i]-a[j]) with i &lt; j.</li>
</ul>
<h2 id="Analyse"><a href="#Analyse" class="headerlink" title="Analyse"></a>Analyse</h2><ul>
<li>max(a[i]-a[j]) = max(max(a[1..j-1]) - a[j]).</li>
<li>Complexity: O(n).</li>
</ul>
<a id="more"></a>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1000000000</span>;</div><div class="line"><span class="keyword">int</span> T;</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="keyword">int</span> MAX, x, ans;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; T;</div><div class="line">	<span class="keyword">while</span> (T--) &#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; n;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; MAX;</div><div class="line">		ans = -INF;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; x;</div><div class="line">			<span class="keyword">if</span> (MAX - x &gt; ans)</div><div class="line">				ans = MAX - x;</div><div class="line">			<span class="keyword">if</span> (x &gt; MAX)</div><div class="line">				MAX = x ;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=2019&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Given a list A, find the max(a[i]-a[j]) with i &amp;lt; j.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Analyse&quot;&gt;&lt;a href=&quot;#Analyse&quot; class=&quot;headerlink&quot; title=&quot;Analyse&quot;&gt;&lt;/a&gt;Analyse&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;max(a[i]-a[j]) = max(max(a[1..j-1]) - a[j]).&lt;/li&gt;
&lt;li&gt;Complexity: O(n).&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="UVA" scheme="http://jinshendan.github.io/categories/UVA/"/>
    
    
      <category term="DP" scheme="http://jinshendan.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>Age Sort - UVA 11462</title>
    <link href="http://jinshendan.github.io/Age-sort.html"/>
    <id>http://jinshendan.github.io/Age-sort.html</id>
    <published>2016-09-09T22:00:00.000Z</published>
    <updated>2016-09-17T12:10:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=26&amp;page=show_problem&amp;problem=2457" target="_blank" rel="external">Here</a>.</p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li>Sort 2,000,000 integers between 1 and 100. </li>
</ul>
<h2 id="Analyse"><a href="#Analyse" class="headerlink" title="Analyse"></a>Analyse</h2><ul>
<li>First idea: fast sort, merge sort O(nlogn), TIMELIMIT!</li>
<li>Use the counting sort algorithm!  </li>
<li>Complexity: O(n).</li>
</ul>
<a id="more"></a>
<h2 id="Code-in-C"><a href="#Code-in-C" class="headerlink" title="Code in C++"></a>Code in C++</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">int</span> n, age;</div><div class="line"><span class="keyword">int</span> first;</div><div class="line"><span class="keyword">int</span> a[<span class="number">100</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n) &#123;</div><div class="line">		<span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</div><div class="line">		first = <span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</div><div class="line">			<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;age);</div><div class="line">			a[age]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++)&#123;</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= a[i]; j++)</div><div class="line">				<span class="keyword">if</span> (first) &#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</div><div class="line">					first = <span class="number">0</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> </div><div class="line">					<span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>); </div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=26&amp;amp;page=show_problem&amp;amp;problem=2457&quot;&gt;Here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Sort 2,000,000 integers between 1 and 100. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Analyse&quot;&gt;&lt;a href=&quot;#Analyse&quot; class=&quot;headerlink&quot; title=&quot;Analyse&quot;&gt;&lt;/a&gt;Analyse&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;First idea: fast sort, merge sort O(nlogn), TIMELIMIT!&lt;/li&gt;
&lt;li&gt;Use the counting sort algorithm!  &lt;/li&gt;
&lt;li&gt;Complexity: O(n).&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="UVA" scheme="http://jinshendan.github.io/categories/UVA/"/>
    
    
      <category term="Sort" scheme="http://jinshendan.github.io/tags/Sort/"/>
    
      <category term="Greedy" scheme="http://jinshendan.github.io/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://jinshendan.github.io/hello-world.html"/>
    <id>http://jinshendan.github.io/hello-world.html</id>
    <published>2016-09-08T22:16:02.000Z</published>
    <updated>2016-09-16T09:53:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
